using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;
using System.Text.RegularExpressions;

namespace WindowsFormsApplication1
{

// объявляем структуру
[Serializable]
struct Football
{
public string fio;
public string club;
public string role;
public int games;
public int goal;
public int assist;

// конструктор
public Football(string fio, string club, string role, int games, int goal, int assist)
{
this.fio = fio;
this.club = club;
this.role = role;
this.games = games;
this.goal = goal;
this.assist = assist;
}

//перезрузка
public override string ToString()
{
return string.Format("{0} {1} {2} {3} {4} {5}", fio, club, role, games, goal, assist);
}

}

public partial class Form1 : Form
{
public static string filename = "football.txt";

//создаем список объектов класса Football
List<Football> meet = new List<Football>();

// открываем файл
public void openFile()
{
FileInfo file = new FileInfo(filename);
if (file.Exists == false)
{
file.Create();
}

}

public Form1()
{
// инициализация
InitializeComponent();
this.BackgroundImage = Image.FromFile(Application.StartupPath + @"\img\main.jpg");

// view data
ViewData();

string ph = dataGridView1.Rows[0].Cells[0].Value.ToString();

try
{
Bitmap image1 = new Bitmap(Application.StartupPath + @"\img\" + ph + ".bmp", true);
pictureBox1.Image = image1;
}

catch
{
Bitmap image1 = new Bitmap(Application.StartupPath + @"\img\noplayer.bmp", true);
pictureBox1.Image = image1;
}
}

// добавление
private void button1_Click(object sender, EventArgs e)
{
string eFio, eClub, eRole;
int eGoal, eAssist, eGames;

// введеные данные
eFio = textBox1.Text;
eClub = textBox2.Text;
eRole = comboBox2.Text;
eGames = Convert.ToInt32(textBox6.Text);
eGoal = Convert.ToInt32(textBox3.Text);
eAssist = Convert.ToInt32(textBox5.Text);

try
{
// добавляем данные
meet.Add(new Football(eFio, eClub, eRole, eGames, eGoal, eAssist));

// запись в поток
using (StreamWriter sw = new StreamWriter(filename, true, Encoding.Default))
{
sw.WriteLine(meet[meet.Count - 1]);
}

MessageBox.Show("Data Insert!");
}

catch
{
MessageBox.Show("Insert Into");
}

// view data
ViewData();

textBox1.Clear();
textBox2.Clear();
textBox3.Clear();
textBox5.Clear();
textBox6.Clear();
}

// формирование вывода
class Uefa
{
// геттеры и сеттеры свойств
public string fio
{
set;
get;
}
public string club
{
set;
get;
}
public string role
{
get;
set;
}
public int games
{
get;
set;
}
public int goal
{
set;
get;
}
public int assist
{
set;
get;
}
public Uefa(string fio, string club, string role, int games, int goal, int assist)
{
this.fio = fio;
this.club = club;
this.role = role;
this.games = games;
this.goal = goal;
this.assist = assist;
}
public static List<Uefa> getList()
{
// структура
List<Uefa> list = new List<Uefa>();

// массив данных
string[] arr = System.IO.File.ReadAllLines(filename, Encoding.Default);
for (int i = 0; i < arr.Length; i++)
{
// разбивка на подстроки
string[] line = arr[i].Split(' ');
Uefa data = new Uefa(line[0], line[1], line[2], Convert.ToInt32(line[3]), Convert.ToInt32(line[4]), Convert.ToInt32(line[5]));
// заполняем структуру
list.Add(data);
}

return list;

}
}

List<Uefa> list;

// view
private void button2_Click(object sender, EventArgs e)
{
ViewData();
}

// view data
void ViewData()
{
list = Uefa.getList();
dataGridView1.DataSource = list;
SetHeaders();
}

// header
void SetHeaders()
{
// text header
dataGridView1.Columns[0].HeaderText = "Fio";
dataGridView1.Columns[1].HeaderText = "Club";
dataGridView1.Columns[2].HeaderText = "Role";
dataGridView1.Columns[3].HeaderText = "Games";
dataGridView1.Columns[4].HeaderText = "Goals";
dataGridView1.Columns[5].HeaderText = "Assist";

// width header
dataGridView1.Columns[3].Width = 50;
dataGridView1.Columns[4].Width = 50;
dataGridView1.Columns[5].Width = 50;
}

// поиск
private void button3_Click(object sender, EventArgs e)
{
string searchText = textBox4.Text;

if (searchText == "")
{
MessageBox.Show("Enter correct search!");
}

string[] arr = System.IO.File.ReadAllLines(filename, Encoding.UTF8);
dataGridView1.DataSource = MakeList(arr, searchText);

textBox4.Clear();
}

// реализация поиска
private List<Uefa> MakeList(string[] search_array, string searchText)
{
List<Uefa> list = new List<Uefa>();

int succef = 0;

for (int i = 0; i < search_array.Length; i++)
{
if (search_array[i].Contains(searchText))
{
string[] words = search_array[i].Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
string ph = words[0];

Bitmap image1 = new Bitmap(Application.StartupPath + @"\img\" + ph + ".bmp", true);
pictureBox1.Image = image1;

string[] temp = search_array[i].Split(' ');
list.Add(new Uefa(temp[0], temp[1], temp[2], Convert.ToInt32(temp[3]), Convert.ToInt32(temp[4]), Convert.ToInt32(temp[5])));
succef++;

PhotoPlayer();
}
}

if (succef == 0)
{
MessageBox.Show("No results");
ViewData();
}

return list;
}

// удаление
private void button4_Click(object sender, EventArgs e)
{
int number_delete = dataGridView1.CurrentRow.Index;

string[] readText = System.IO.File.ReadAllLines(filename);

try
{

using (System.IO.StreamWriter file = new System.IO.StreamWriter(filename, false))
{
for (int i = 0; i < readText.Length; i++)
{
if (i != number_delete)
file.WriteLine(readText[i]);
}
}
MessageBox.Show("Delete field");
}

catch
{
MessageBox.Show("Error delete");
}

// view data
ViewData();
}

// photo player
private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
{
PhotoPlayer();
}

void PhotoPlayer()
{
// id rows
int number_photo = dataGridView1.CurrentRow.Index;

string ph = dataGridView1.Rows[number_photo].Cells[0].Value.ToString();

try
{
Bitmap image1 = new Bitmap(Application.StartupPath + @"\img\" + ph + ".bmp", true);
pictureBox1.Image = image1;
}

catch
{
Bitmap image1 = new Bitmap(Application.StartupPath + @"\img\noplayer.bmp", true);
pictureBox1.Image = image1;
}
}

// edit data
private void button7_Click(object sender, EventArgs e)
{
FileStream fs = new FileStream(filename, FileMode.Create);
StreamWriter streamWriter = new StreamWriter(fs);

try
{
for (int j = 0; j < dataGridView1.Rows.Count; j++)
{
for (int i = 1; i < dataGridView1.Rows[j].Cells.Count; i++)
{
streamWriter.Write(dataGridView1.Rows[j].Cells[i].Value + " ");
}

streamWriter.WriteLine();
}

streamWriter.Close();
fs.Close();

// view data
ViewData();

MessageBox.Show("Data save");
}
catch
{
MessageBox.Show("Error save!");
}
}

// sort combobox
private void button8_Click(object sender, EventArgs e)
{
string sort_param = comboBox1.Text;

if (sort_param == "")
{
MessageBox.Show("Choice sort param!");
}

switch (sort_param)
{
case "Fio":
if (list == null)
list = Uefa.getList();
dataGridView1.DataSource = null;
list = list.OrderBy(x => x.club).ToList<Uefa>();
break;
case "Club":
if (list == null)
list = Uefa.getList();
dataGridView1.DataSource = null;
list = list.OrderBy(x => x.club).ToList<Uefa>();
break;
case "Games":
if (list == null)
list = Uefa.getList();
dataGridView1.DataSource = null;
list = list.OrderByDescending(x => x.games).ToList<Uefa>();
break;
case "Goal":
if (list == null)
list = Uefa.getList();
dataGridView1.DataSource = null;
list = list.OrderByDescending(x => x.goal).ToList<Uefa>();
break;
case "Assist":
if (list == null)
list = Uefa.getList();
dataGridView1.DataSource = null;
list = list.OrderByDescending(x => x.assist).ToList<Uefa>();
break;
}

dataGridView1.DataSource = list;
SetHeaders();
PhotoPlayer();

}

// keypress game
private void textBox6_KeyPress(object sender, KeyPressEventArgs e)
{
if (!Char.IsDigit(e.KeyChar) && e.KeyChar != Convert.ToChar(8))
{
e.Handled = true;
}
}

// keypress goals
private void textBox3_KeyPress(object sender, KeyPressEventArgs e)
{
if (!Char.IsDigit(e.KeyChar) && e.KeyChar != Convert.ToChar(8))
{
e.Handled = true;
}
}

// keypress assist
private void textBox5_KeyPress(object sender, KeyPressEventArgs e)
{
if (!Char.IsDigit(e.KeyChar) && e.KeyChar != Convert.ToChar(8))
{
e.Handled = true;
}
}

// keypress fio
private void textBox1_KeyPress(object sender, KeyPressEventArgs e)
{
string key_fio = e.KeyChar.ToString();

if (!Regex.Match(key_fio, @"[a-zA-Z]|[\b]").Success)
{
e.Handled = true;
}
}

// keypress club
private void textBox2_KeyPress(object sender, KeyPressEventArgs e)
{
string key_club = e.KeyChar.ToString();

if (!Regex.Match(key_club, @"[a-zA-Z]|[\b]").Success)
{
e.Handled = true;
}
}

// keypress search
private void textBox4_KeyPress(object sender, KeyPressEventArgs e)
{
string key_search = e.KeyChar.ToString();

if (!Regex.Match(key_search, @"[a-zA-Z]|[\b]").Success)
{
e.Handled = true;
}
}

}
}
